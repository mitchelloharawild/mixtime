% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/01_chronon_divmod.R
\name{chronon_divmod}
\alias{chronon_divmod}
\title{Convert between chronons of different time units}
\usage{
chronon_divmod(from, to, ...)
}
\arguments{
\item{from}{The time unit that \code{x} is measured in (e.g., \code{tu_day(1L)}).}

\item{to}{The time unit to convert \code{x} into (e.g., \code{tu_week(1L)}).}

\item{x}{An integer vector of chronons measured in the \code{from} time unit.}
}
\value{
An list of two elements:
\itemize{
\item \code{chronon}: integer vector of chronons measured in the \code{to} time unit.
\item \code{remainder}: integer vector of the remainder (in \code{from} time unit) after
converting to the \code{to} time unit.
}
}
\description{
This function converts between chronons measured in different time units. It
is used internally for converting between different continuous time types,
and is particularly useful for efficiently converting between irregular time
units. The default method uses \code{calendar_algebra()} to cast between time
units, which is efficient for regular time units.
}
\examples{
# Convert day 16 since epoch into weeks since epoch (and remainder days)
chronon_divmod(tu_day(1L), tu_week(1L), 16L)

# Convert week 4 since epoch into days since epoch
chronon_divmod(tu_week(1L), tu_day(1L), 4L)
}
